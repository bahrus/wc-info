{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "p-p-x.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PPX",
          "members": [
            {
              "kind": "field",
              "name": "is",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'p-p-x'",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "kind": "method",
              "name": "filterVal",
              "parameters": [
                {
                  "name": "val",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "expression",
              "name": "JSONPath",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassPropExt",
                "module": "pass-prop-ext.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Id within the ShadowDOM Realm of p-d-x of a script tag. The script tag is expected to have a property path where a custom filter function is specified. This custom filter function is applied to the value.",
              "name": "valFilterScriptId",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassPropExt",
                "module": "pass-prop-ext.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Property path from the script tag, where custom filter function can be obtained.",
              "name": "valFilterScriptPropPath",
              "default": "_modExport.filter",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassPropExt",
                "module": "pass-prop-ext.ts"
              }
            },
            {
              "kind": "field",
              "name": "propActions",
              "default": "[\r\n    onFromRootNodeHost, \r\n    onHostToObserve, \r\n    onLastVal, \r\n    onFromUpsearch, \r\n    onFromParent, \r\n    onFromParentOrHost, \r\n    onFromUpShadowSearch\r\n]",
              "privacy": "private",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "kind": "field",
              "name": "self",
              "default": "this",
              "privacy": "private",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "kind": "field",
              "name": "reactor",
              "type": {
                "text": "IReactor"
              },
              "default": "new xc.Rx(this)",
              "privacy": "private",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "kind": "method",
              "name": "subscribe",
              "parameters": [
                {
                  "name": "self",
                  "type": {
                    "text": "PassPropProps"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "kind": "method",
              "name": "onPropChange",
              "parameters": [
                {
                  "name": "n",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "propDef",
                  "type": {
                    "text": "PropDef"
                  }
                },
                {
                  "name": "nv",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property from ShadowRoot Host",
              "name": "fromHost",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property from parent element",
              "name": "fromParent",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property fro parent element if available, otherwise from host.",
              "name": "fromParentOrHost",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Upsearch up the DOM Node Tree for an element matching this css selector",
              "name": "fromUpsearch",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Search by ID within the Shadow DOM realm of the element, or search up the ShadowDOM hierarchy, if the path starts with paths like ../../myElementId",
              "name": "fromUpShadowSearch",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Name of property to observe",
              "name": "observeProp",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Useful for hiding element if property is falsy [TODO]",
              "name": "asFalsyAttr",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            }
          ],
          "superclass": {
            "name": "PassPropExt",
            "module": "/pass-prop-ext.js"
          },
          "tagName": "p-p-x",
          "customElement": true,
          "attributes": [
            {
              "type": {
                "text": "string"
              },
              "description": "JSONPath expression",
              "name": "val-filter",
              "inheritedFrom": {
                "name": "PassPropExt",
                "module": "pass-prop-ext.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Id within the ShadowDOM Realm of p-d-x of a script tag. The script tag is expected to have a property path where a custom filter function is specified. This custom filter function is applied to the value.",
              "name": "val-filter-script-id",
              "inheritedFrom": {
                "name": "PassPropExt",
                "module": "pass-prop-ext.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Property path from the script tag, where custom filter function can be obtained.",
              "name": "val-filter-script-prop-path",
              "inheritedFrom": {
                "name": "PassPropExt",
                "module": "pass-prop-ext.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property from ShadowRoot Host",
              "name": "from-host",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property from parent element",
              "name": "from-parent",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property fro parent element if available, otherwise from host.",
              "name": "from-parent-or-host",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Upsearch up the DOM Node Tree for an element matching this css selector",
              "name": "from-upsearch",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Search by ID within the Shadow DOM realm of the element, or search up the ShadowDOM hierarchy, if the path starts with paths like ../../myElementId",
              "name": "from-up-shadow-search",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Name of property to observe",
              "name": "observe-prop",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Useful for hiding element if property is falsy [TODO]",
              "name": "as-falsy-attr",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PPX",
          "declaration": {
            "name": "PPX",
            "module": "p-p-x.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "p-p-x.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PPX",
          "members": [
            {
              "kind": "field",
              "name": "is",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'p-p-x'",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "kind": "method",
              "name": "filterVal",
              "parameters": [
                {
                  "name": "val",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "expression",
              "name": "JSONPath",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassPropExt",
                "module": "pass-prop-ext.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Id within the ShadowDOM Realm of p-d-x of a script tag. The script tag is expected to have a property path where a custom filter function is specified. This custom filter function is applied to the value.",
              "name": "valFilterScriptId",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassPropExt",
                "module": "pass-prop-ext.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Property path from the script tag, where custom filter function can be obtained.",
              "name": "valFilterScriptPropPath",
              "default": "_modExport.filter",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassPropExt",
                "module": "pass-prop-ext.ts"
              }
            },
            {
              "kind": "field",
              "name": "propActions",
              "default": "[\r\n    onFromRootNodeHost, \r\n    onHostToObserve, \r\n    onLastVal, \r\n    onFromUpsearch, \r\n    onFromParent, \r\n    onFromParentOrHost, \r\n    onFromUpShadowSearch\r\n]",
              "privacy": "private",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "kind": "field",
              "name": "self",
              "default": "this",
              "privacy": "private",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "kind": "field",
              "name": "reactor",
              "type": {
                "text": "IReactor"
              },
              "default": "new xc.Rx(this)",
              "privacy": "private",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "kind": "method",
              "name": "subscribe",
              "parameters": [
                {
                  "name": "self",
                  "type": {
                    "text": "PassPropProps"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "kind": "method",
              "name": "onPropChange",
              "parameters": [
                {
                  "name": "n",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "propDef",
                  "type": {
                    "text": "PropDef"
                  }
                },
                {
                  "name": "nv",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property from ShadowRoot Host",
              "name": "fromHost",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property from parent element",
              "name": "fromParent",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property fro parent element if available, otherwise from host.",
              "name": "fromParentOrHost",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Upsearch up the DOM Node Tree for an element matching this css selector",
              "name": "fromUpsearch",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Search by ID within the Shadow DOM realm of the element, or search up the ShadowDOM hierarchy, if the path starts with paths like ../../myElementId",
              "name": "fromUpShadowSearch",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Name of property to observe",
              "name": "observeProp",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Useful for hiding element if property is falsy [TODO]",
              "name": "asFalsyAttr",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            }
          ],
          "superclass": {
            "name": "PassPropExt",
            "module": "/pass-prop-ext.js"
          },
          "tagName": "p-p-x",
          "customElement": true,
          "attributes": [
            {
              "type": {
                "text": "string"
              },
              "description": "JSONPath expression",
              "name": "val-filter",
              "inheritedFrom": {
                "name": "PassPropExt",
                "module": "pass-prop-ext.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Id within the ShadowDOM Realm of p-d-x of a script tag. The script tag is expected to have a property path where a custom filter function is specified. This custom filter function is applied to the value.",
              "name": "val-filter-script-id",
              "inheritedFrom": {
                "name": "PassPropExt",
                "module": "pass-prop-ext.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Property path from the script tag, where custom filter function can be obtained.",
              "name": "val-filter-script-prop-path",
              "inheritedFrom": {
                "name": "PassPropExt",
                "module": "pass-prop-ext.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property from ShadowRoot Host",
              "name": "from-host",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property from parent element",
              "name": "from-parent",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property fro parent element if available, otherwise from host.",
              "name": "from-parent-or-host",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Upsearch up the DOM Node Tree for an element matching this css selector",
              "name": "from-upsearch",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Search by ID within the Shadow DOM realm of the element, or search up the ShadowDOM hierarchy, if the path starts with paths like ../../myElementId",
              "name": "from-up-shadow-search",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Name of property to observe",
              "name": "observe-prop",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Useful for hiding element if property is falsy [TODO]",
              "name": "as-falsy-attr",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PPX",
          "declaration": {
            "name": "PPX",
            "module": "p-p-x.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "p-p.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PP",
          "members": [
            {
              "kind": "field",
              "name": "is",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'p-p'",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "kind": "field",
              "name": "propActions",
              "default": "[\r\n    onFromRootNodeHost, \r\n    onHostToObserve, \r\n    onLastVal, \r\n    onFromUpsearch, \r\n    onFromParent, \r\n    onFromParentOrHost, \r\n    onFromUpShadowSearch\r\n]",
              "privacy": "private",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "kind": "field",
              "name": "self",
              "default": "this",
              "privacy": "private",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "kind": "field",
              "name": "reactor",
              "type": {
                "text": "IReactor"
              },
              "default": "new xc.Rx(this)",
              "privacy": "private",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "kind": "method",
              "name": "subscribe",
              "parameters": [
                {
                  "name": "self",
                  "type": {
                    "text": "PassPropProps"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "kind": "method",
              "name": "onPropChange",
              "parameters": [
                {
                  "name": "n",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "propDef",
                  "type": {
                    "text": "PropDef"
                  }
                },
                {
                  "name": "nv",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "kind": "method",
              "name": "filterVal",
              "parameters": [
                {
                  "name": "val",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property from ShadowRoot Host",
              "name": "fromHost",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property from parent element",
              "name": "fromParent",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property fro parent element if available, otherwise from host.",
              "name": "fromParentOrHost",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Upsearch up the DOM Node Tree for an element matching this css selector",
              "name": "fromUpsearch",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Search by ID within the Shadow DOM realm of the element, or search up the ShadowDOM hierarchy, if the path starts with paths like ../../myElementId",
              "name": "fromUpShadowSearch",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Name of property to observe",
              "name": "observeProp",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Useful for hiding element if property is falsy [TODO]",
              "name": "asFalsyAttr",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            }
          ],
          "superclass": {
            "name": "PassProp",
            "module": "/pass-prop.js"
          },
          "tagName": "p-p",
          "customElement": true,
          "attributes": [
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property from ShadowRoot Host",
              "name": "from-host",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property from parent element",
              "name": "from-parent",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property fro parent element if available, otherwise from host.",
              "name": "from-parent-or-host",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Upsearch up the DOM Node Tree for an element matching this css selector",
              "name": "from-upsearch",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Search by ID within the Shadow DOM realm of the element, or search up the ShadowDOM hierarchy, if the path starts with paths like ../../myElementId",
              "name": "from-up-shadow-search",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Name of property to observe",
              "name": "observe-prop",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Useful for hiding element if property is falsy [TODO]",
              "name": "as-falsy-attr",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PP",
          "declaration": {
            "name": "PP",
            "module": "p-p.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "p-p.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PP",
          "members": [
            {
              "kind": "field",
              "name": "is",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'p-p'",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "kind": "field",
              "name": "propActions",
              "default": "[\r\n    onFromRootNodeHost, \r\n    onHostToObserve, \r\n    onLastVal, \r\n    onFromUpsearch, \r\n    onFromParent, \r\n    onFromParentOrHost, \r\n    onFromUpShadowSearch\r\n]",
              "privacy": "private",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "kind": "field",
              "name": "self",
              "default": "this",
              "privacy": "private",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "kind": "field",
              "name": "reactor",
              "type": {
                "text": "IReactor"
              },
              "default": "new xc.Rx(this)",
              "privacy": "private",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "kind": "method",
              "name": "subscribe",
              "parameters": [
                {
                  "name": "self",
                  "type": {
                    "text": "PassPropProps"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "kind": "method",
              "name": "onPropChange",
              "parameters": [
                {
                  "name": "n",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "propDef",
                  "type": {
                    "text": "PropDef"
                  }
                },
                {
                  "name": "nv",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "kind": "method",
              "name": "filterVal",
              "parameters": [
                {
                  "name": "val",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property from ShadowRoot Host",
              "name": "fromHost",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property from parent element",
              "name": "fromParent",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property fro parent element if available, otherwise from host.",
              "name": "fromParentOrHost",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Upsearch up the DOM Node Tree for an element matching this css selector",
              "name": "fromUpsearch",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Search by ID within the Shadow DOM realm of the element, or search up the ShadowDOM hierarchy, if the path starts with paths like ../../myElementId",
              "name": "fromUpShadowSearch",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Name of property to observe",
              "name": "observeProp",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Useful for hiding element if property is falsy [TODO]",
              "name": "asFalsyAttr",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            }
          ],
          "superclass": {
            "name": "PassProp",
            "module": "/pass-prop.js"
          },
          "tagName": "p-p",
          "customElement": true,
          "attributes": [
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property from ShadowRoot Host",
              "name": "from-host",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property from parent element",
              "name": "from-parent",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property fro parent element if available, otherwise from host.",
              "name": "from-parent-or-host",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Upsearch up the DOM Node Tree for an element matching this css selector",
              "name": "from-upsearch",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Search by ID within the Shadow DOM realm of the element, or search up the ShadowDOM hierarchy, if the path starts with paths like ../../myElementId",
              "name": "from-up-shadow-search",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Name of property to observe",
              "name": "observe-prop",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Useful for hiding element if property is falsy [TODO]",
              "name": "as-falsy-attr",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PP",
          "declaration": {
            "name": "PP",
            "module": "p-p.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pass-prop-ext.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PassPropExt",
          "members": [
            {
              "kind": "field",
              "name": "is",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'pass-prop-ext'",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "kind": "method",
              "name": "filterVal",
              "parameters": [
                {
                  "name": "val"
                }
              ],
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "expression",
              "name": "JSONPath",
              "kind": "field"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Id within the ShadowDOM Realm of p-d-x of a script tag. The script tag is expected to have a property path where a custom filter function is specified. This custom filter function is applied to the value.",
              "name": "valFilterScriptId",
              "kind": "field"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Property path from the script tag, where custom filter function can be obtained.",
              "name": "valFilterScriptPropPath",
              "default": "_modExport.filter",
              "kind": "field"
            },
            {
              "kind": "field",
              "name": "propActions",
              "default": "[\r\n    onFromRootNodeHost, \r\n    onHostToObserve, \r\n    onLastVal, \r\n    onFromUpsearch, \r\n    onFromParent, \r\n    onFromParentOrHost, \r\n    onFromUpShadowSearch\r\n]",
              "privacy": "private",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "kind": "field",
              "name": "self",
              "default": "this",
              "privacy": "private",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "kind": "field",
              "name": "reactor",
              "type": {
                "text": "IReactor"
              },
              "default": "new xc.Rx(this)",
              "privacy": "private",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "kind": "method",
              "name": "subscribe",
              "parameters": [
                {
                  "name": "self",
                  "type": {
                    "text": "PassPropProps"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "kind": "method",
              "name": "onPropChange",
              "parameters": [
                {
                  "name": "n",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "propDef",
                  "type": {
                    "text": "PropDef"
                  }
                },
                {
                  "name": "nv",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property from ShadowRoot Host",
              "name": "fromHost",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property from parent element",
              "name": "fromParent",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property fro parent element if available, otherwise from host.",
              "name": "fromParentOrHost",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Upsearch up the DOM Node Tree for an element matching this css selector",
              "name": "fromUpsearch",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Search by ID within the Shadow DOM realm of the element, or search up the ShadowDOM hierarchy, if the path starts with paths like ../../myElementId",
              "name": "fromUpShadowSearch",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Name of property to observe",
              "name": "observeProp",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Useful for hiding element if property is falsy [TODO]",
              "name": "asFalsyAttr",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "string"
              },
              "description": "JSONPath expression",
              "name": "val-filter"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Id within the ShadowDOM Realm of p-d-x of a script tag. The script tag is expected to have a property path where a custom filter function is specified. This custom filter function is applied to the value.",
              "name": "val-filter-script-id"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Property path from the script tag, where custom filter function can be obtained.",
              "name": "val-filter-script-prop-path"
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property from ShadowRoot Host",
              "name": "from-host",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property from parent element",
              "name": "from-parent",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property fro parent element if available, otherwise from host.",
              "name": "from-parent-or-host",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Upsearch up the DOM Node Tree for an element matching this css selector",
              "name": "from-upsearch",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Search by ID within the Shadow DOM realm of the element, or search up the ShadowDOM hierarchy, if the path starts with paths like ../../myElementId",
              "name": "from-up-shadow-search",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Name of property to observe",
              "name": "observe-prop",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Useful for hiding element if property is falsy [TODO]",
              "name": "as-falsy-attr",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            }
          ],
          "superclass": {
            "name": "PassProp",
            "module": "/pass-prop.js"
          },
          "tagName": "pass-prop-ext",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PassPropExt",
          "declaration": {
            "name": "PassPropExt",
            "module": "pass-prop-ext.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pass-prop-ext.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PassPropExt",
          "members": [
            {
              "kind": "field",
              "name": "is",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'pass-prop-ext'",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "kind": "method",
              "name": "filterVal",
              "parameters": [
                {
                  "name": "val",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "expression",
              "name": "JSONPath",
              "kind": "field"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Id within the ShadowDOM Realm of p-d-x of a script tag. The script tag is expected to have a property path where a custom filter function is specified. This custom filter function is applied to the value.",
              "name": "valFilterScriptId",
              "kind": "field"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Property path from the script tag, where custom filter function can be obtained.",
              "name": "valFilterScriptPropPath",
              "default": "_modExport.filter",
              "kind": "field"
            },
            {
              "kind": "field",
              "name": "propActions",
              "default": "[\r\n    onFromRootNodeHost, \r\n    onHostToObserve, \r\n    onLastVal, \r\n    onFromUpsearch, \r\n    onFromParent, \r\n    onFromParentOrHost, \r\n    onFromUpShadowSearch\r\n]",
              "privacy": "private",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "kind": "field",
              "name": "self",
              "default": "this",
              "privacy": "private",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "kind": "field",
              "name": "reactor",
              "type": {
                "text": "IReactor"
              },
              "default": "new xc.Rx(this)",
              "privacy": "private",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "kind": "method",
              "name": "subscribe",
              "parameters": [
                {
                  "name": "self",
                  "type": {
                    "text": "PassPropProps"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "kind": "method",
              "name": "onPropChange",
              "parameters": [
                {
                  "name": "n",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "propDef",
                  "type": {
                    "text": "PropDef"
                  }
                },
                {
                  "name": "nv",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property from ShadowRoot Host",
              "name": "fromHost",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property from parent element",
              "name": "fromParent",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property fro parent element if available, otherwise from host.",
              "name": "fromParentOrHost",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Upsearch up the DOM Node Tree for an element matching this css selector",
              "name": "fromUpsearch",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Search by ID within the Shadow DOM realm of the element, or search up the ShadowDOM hierarchy, if the path starts with paths like ../../myElementId",
              "name": "fromUpShadowSearch",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Name of property to observe",
              "name": "observeProp",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Useful for hiding element if property is falsy [TODO]",
              "name": "asFalsyAttr",
              "kind": "field",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "string"
              },
              "description": "JSONPath expression",
              "name": "val-filter"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Id within the ShadowDOM Realm of p-d-x of a script tag. The script tag is expected to have a property path where a custom filter function is specified. This custom filter function is applied to the value.",
              "name": "val-filter-script-id"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Property path from the script tag, where custom filter function can be obtained.",
              "name": "val-filter-script-prop-path"
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property from ShadowRoot Host",
              "name": "from-host",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property from parent element",
              "name": "from-parent",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property fro parent element if available, otherwise from host.",
              "name": "from-parent-or-host",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Upsearch up the DOM Node Tree for an element matching this css selector",
              "name": "from-upsearch",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Search by ID within the Shadow DOM realm of the element, or search up the ShadowDOM hierarchy, if the path starts with paths like ../../myElementId",
              "name": "from-up-shadow-search",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Name of property to observe",
              "name": "observe-prop",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Useful for hiding element if property is falsy [TODO]",
              "name": "as-falsy-attr",
              "inheritedFrom": {
                "name": "PassProp",
                "module": "pass-prop.ts"
              }
            }
          ],
          "superclass": {
            "name": "PassProp",
            "module": "/pass-prop.js"
          },
          "tagName": "pass-prop-ext",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PassPropExt",
          "declaration": {
            "name": "PassPropExt",
            "module": "pass-prop-ext.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pass-prop.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PassProp",
          "members": [
            {
              "kind": "field",
              "name": "is",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'pass-prop'"
            },
            {
              "kind": "field",
              "name": "propActions",
              "default": "[\n    onFromRootNodeHost,\n    onHostToObserve,\n    onLastVal,\n    onFromUpsearch,\n    onFromParent,\n    onFromParentOrHost,\n    onFromUpShadowSearch\n]",
              "privacy": "private",
              "type": {
                "text": "array"
              }
            },
            {
              "kind": "field",
              "name": "self",
              "default": "this",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "reactor",
              "default": "new xc.Rx(this)",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "subscribe",
              "parameters": [
                {
                  "name": "self"
                }
              ]
            },
            {
              "kind": "method",
              "name": "onPropChange",
              "parameters": [
                {
                  "name": "n"
                },
                {
                  "name": "propDef"
                },
                {
                  "name": "nv"
                }
              ]
            },
            {
              "kind": "method",
              "name": "filterVal",
              "parameters": [
                {
                  "name": "val"
                }
              ]
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property from ShadowRoot Host",
              "name": "fromHost",
              "kind": "field"
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property from parent element",
              "name": "fromParent",
              "kind": "field"
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property fro parent element if available, otherwise from host.",
              "name": "fromParentOrHost",
              "kind": "field"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Upsearch up the DOM Node Tree for an element matching this css selector",
              "name": "fromUpsearch",
              "kind": "field"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Search by ID within the Shadow DOM realm of the element, or search up the ShadowDOM hierarchy, if the path starts with paths like ../../myElementId",
              "name": "fromUpShadowSearch",
              "kind": "field"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Name of property to observe",
              "name": "observeProp",
              "kind": "field"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Useful for hiding element if property is falsy [TODO]",
              "name": "asFalsyAttr",
              "kind": "field"
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property from ShadowRoot Host",
              "name": "from-host"
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property from parent element",
              "name": "from-parent"
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property fro parent element if available, otherwise from host.",
              "name": "from-parent-or-host"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Upsearch up the DOM Node Tree for an element matching this css selector",
              "name": "from-upsearch"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Search by ID within the Shadow DOM realm of the element, or search up the ShadowDOM hierarchy, if the path starts with paths like ../../myElementId",
              "name": "from-up-shadow-search"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Name of property to observe",
              "name": "observe-prop"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Useful for hiding element if property is falsy [TODO]",
              "name": "as-falsy-attr"
            }
          ],
          "superclass": {
            "name": "HTMLElement"
          },
          "tagName": "pass-prop",
          "customElement": true
        },
        {
          "kind": "function",
          "name": "upSearch",
          "parameters": [
            {
              "name": "el"
            },
            {
              "name": "css"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PassProp",
          "declaration": {
            "name": "PassProp",
            "module": "pass-prop.js"
          }
        },
        {
          "kind": "js",
          "name": "upSearch",
          "declaration": {
            "name": "upSearch",
            "module": "pass-prop.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pass-prop.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PassProp",
          "members": [
            {
              "kind": "field",
              "name": "is",
              "type": {
                "text": "string"
              },
              "static": true,
              "default": "'pass-prop'"
            },
            {
              "kind": "field",
              "name": "propActions",
              "default": "[\r\n    onFromRootNodeHost, \r\n    onHostToObserve, \r\n    onLastVal, \r\n    onFromUpsearch, \r\n    onFromParent, \r\n    onFromParentOrHost, \r\n    onFromUpShadowSearch\r\n]",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "self",
              "default": "this",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "reactor",
              "type": {
                "text": "IReactor"
              },
              "default": "new xc.Rx(this)",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "subscribe",
              "parameters": [
                {
                  "name": "self",
                  "type": {
                    "text": "PassPropProps"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onPropChange",
              "parameters": [
                {
                  "name": "n",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "propDef",
                  "type": {
                    "text": "PropDef"
                  }
                },
                {
                  "name": "nv",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "filterVal",
              "parameters": [
                {
                  "name": "val",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property from ShadowRoot Host",
              "name": "fromHost",
              "kind": "field"
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property from parent element",
              "name": "fromParent",
              "kind": "field"
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property fro parent element if available, otherwise from host.",
              "name": "fromParentOrHost",
              "kind": "field"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Upsearch up the DOM Node Tree for an element matching this css selector",
              "name": "fromUpsearch",
              "kind": "field"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Search by ID within the Shadow DOM realm of the element, or search up the ShadowDOM hierarchy, if the path starts with paths like ../../myElementId",
              "name": "fromUpShadowSearch",
              "kind": "field"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Name of property to observe",
              "name": "observeProp",
              "kind": "field"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Useful for hiding element if property is falsy [TODO]",
              "name": "asFalsyAttr",
              "kind": "field"
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property from ShadowRoot Host",
              "name": "from-host"
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property from parent element",
              "name": "from-parent"
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Observe property fro parent element if available, otherwise from host.",
              "name": "from-parent-or-host"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Upsearch up the DOM Node Tree for an element matching this css selector",
              "name": "from-upsearch"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Search by ID within the Shadow DOM realm of the element, or search up the ShadowDOM hierarchy, if the path starts with paths like ../../myElementId",
              "name": "from-up-shadow-search"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Name of property to observe",
              "name": "observe-prop"
            },
            {
              "type": {
                "text": "string"
              },
              "description": "Useful for hiding element if property is falsy [TODO]",
              "name": "as-falsy-attr"
            }
          ],
          "superclass": {
            "name": "HTMLElement"
          },
          "tagName": "pass-prop",
          "customElement": true
        },
        {
          "kind": "function",
          "name": "upSearch",
          "parameters": [
            {
              "name": "el",
              "type": {
                "text": "Element"
              }
            },
            {
              "name": "css",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PassProp",
          "declaration": {
            "name": "PassProp",
            "module": "pass-prop.ts"
          }
        },
        {
          "kind": "js",
          "name": "upSearch",
          "declaration": {
            "name": "upSearch",
            "module": "pass-prop.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "types.d.ts",
      "declarations": [],
      "exports": []
    }
  ]
}
