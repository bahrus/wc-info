!function(){const t="disabled";const e="package-name";!function(t){let e=t.is;customElements.get(e)?console.warn("Already registered "+e):customElements.define(e,t)}(class extends(function(e){return class extends e{constructor(){super(...arguments),this._evCount={}}static get observedAttributes(){return[t]}get disabled(){return this._disabled}set disabled(e){this.attr(t,e,"")}attr(t,e,s){this[(e?"set":"remove")+"Attribute"](t,s||e)}to$(t){const e=t%2;return(t-e)/2+"-"+e}incAttr(t){const e=this._evCount;t in e?e[t]++:e[t]=0,this.attr("data-"+t,this.to$(e[t]))}attributeChangedCallback(e,s,n){switch(e){case t:this._disabled=null!==n}}de(t,e,s=!1){const n=t+(s?"":"-changed"),r=new CustomEvent(n,{detail:e,bubbles:!0,composed:!1});return this.dispatchEvent(r),this.incAttr(n),r}_upgradeProperties(t){t.forEach(t=>{if(this.hasOwnProperty(t)){let e=this[t];delete this[t],this[t]=e}})}}}(HTMLElement)){constructor(){super(...arguments),this._href=null,this._packageName=null,this._c=!1}static get is(){return"wc-info-base"}static get observedAttributes(){return super.observedAttributes.concat(["href",e])}attributeChangedCallback(t,s,n){switch(super.attributeChangedCallback(t,s,n),t){case"href":this._href=n;break;case e:this._packageName=n}this.onPropsChange()}get href(){return this._href}set href(t){this.attr("href",t)}get packageName(){return this._packageName}set packageName(t){this.attr(e,t)}connectedCallback(){this._upgradeProperties(["href"]),this._c=!0,this.onPropsChange()}genAttr(t){return`<dt>${t.label}</dt><dd>${t.description}</dd>`}genAttrs(t){return`<dl>${t.map(t=>this.genAttr(t)).join("")}`}genWCInfo(t){return`\n        <section class="WCInfo card">\n            <header>\n                <div class="WCLabel">${t.label}</div>\n                <div class="WCDesc">${t.description}</div>\n            </header>\n            <details>\n                <summary>attributes</summary>\n                ${this.genAttrs(t.attributes)}\n            </details> \n        </section>`}genWCInfos(t){return t.map(t=>this.genWCInfo(t)).join("")}genWCSuite(t){return`\n            <header>\n                <mark>${this._packageName}</mark>\n                <nav>\n                    <a href="${this._href}" target="_blank">⚙️</a>\n                </nav>\n            </header>\n            ${this.genWCInfos(t.tags)}\n            \n        `}onPropsChange(){!this._disabled&&this._c&&null!==this._href&&fetch(this._href).then(t=>{t.json().then(t=>{this.render(t)})})}render(t){this.innerHTML=this.genWCSuite(t)}})}();